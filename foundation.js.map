{"version":3,"file":"foundation.js","sourceRoot":"","sources":["../foundation.ts"],"names":[],"mappings":"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","sourcesContent":["import { Insert } from '@openscd/open-scd-core';\n\nimport { Update, getReference } from '@openenergytools/scl-lib';\n\n/** Utility function to create element with `tagName` and its`attributes` */\nfunction createElement(\n  doc: XMLDocument,\n  tag: string,\n  attrs: Record<string, string | null>\n): Element {\n  const element = doc.createElementNS(doc.documentElement.namespaceURI, tag);\n  Object.entries(attrs)\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    .filter(([_, value]) => value !== null)\n    .forEach(([name, value]) => element.setAttribute(name, value!));\n\n  return element;\n}\n\nfunction isDataTypeConnected(dataType: Element, template: Element): boolean {\n  const dataTypeTemplates: Element = dataType.parentElement!;\n  const id = dataType.getAttribute('id');\n\n  if (!dataTypeTemplates || !id) return false;\n\n  if (dataType.tagName === 'EnumType')\n    return Array.from(\n      dataTypeTemplates.querySelectorAll(\n        `DOType > DA[type=\"${id}\"],DAType > BDA[type=\"${id}\"]`\n      )\n    ).some(typeChild =>\n      isDataTypeConnected(typeChild.parentElement!, template)\n    );\n\n  if (dataType.tagName === 'DAType')\n    return Array.from(\n      dataTypeTemplates.querySelectorAll(\n        `DOType > DA[type=\"${id}\"],DAType > BDA[type=\"${id}\"]`\n      )\n    ).some(typeChild =>\n      isDataTypeConnected(typeChild.parentElement!, template)\n    );\n\n  if (dataType.tagName === 'DOType')\n    return Array.from(\n      dataTypeTemplates.querySelectorAll(\n        `LNodeType > DO[type=\"${id}\"], DOType > SDO[type=\"${id}\"]`\n      )\n    ).some(typeChild =>\n      isDataTypeConnected(typeChild.parentElement!, template)\n    );\n\n  return !!template.querySelector(`LNode[lnType=\"${id}\"]`);\n}\n\nfunction addEnumType(\n  template: Element,\n  newEnumType: Element,\n  oldDataTypeTemplates: Element\n): Insert | undefined {\n  if (!isDataTypeConnected(newEnumType, template)) return undefined;\n\n  const existEnumType = oldDataTypeTemplates.querySelector(\n    `EnumType[id=\"${newEnumType.getAttribute('id')}\"]`\n  );\n  if (existEnumType && newEnumType.isEqualNode(existEnumType)) return undefined;\n\n  if (existEnumType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n\n    window.alert('There is inconsistent duplication. Please resolve first');\n\n    return undefined;\n  }\n\n  return {\n    parent: oldDataTypeTemplates,\n    node: newEnumType,\n    reference: getReference(oldDataTypeTemplates, 'EnumType'),\n  };\n}\n\nfunction addDAType(\n  template: Element,\n  newDAType: Element,\n  oldDataTypeTemplates: Element\n): Insert | undefined {\n  if (!isDataTypeConnected(newDAType, template)) return undefined;\n\n  const existDAType = oldDataTypeTemplates.querySelector(\n    `DAType[id=\"${newDAType.getAttribute('id')}\"]`\n  );\n  if (existDAType && newDAType.isEqualNode(existDAType)) return undefined;\n\n  if (existDAType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n\n    window.alert('There is inconsistent duplication. Please resolve first');\n\n    return undefined;\n  }\n\n  return {\n    parent: oldDataTypeTemplates,\n    node: newDAType,\n    reference: getReference(oldDataTypeTemplates, 'DAType'),\n  };\n}\n\nfunction addDOType(\n  template: Element,\n  newDOType: Element,\n  oldDataTypeTemplates: Element\n): Insert | undefined {\n  if (!isDataTypeConnected(newDOType, template)) return undefined;\n\n  const existDOType = oldDataTypeTemplates.querySelector(\n    `DOType[id=\"${newDOType.getAttribute('id')}\"]`\n  );\n  if (existDOType && newDOType.isEqualNode(existDOType)) return undefined;\n\n  if (existDOType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n\n    window.alert('There is inconsistent duplication. Please resolve first');\n\n    return undefined;\n  }\n\n  return {\n    parent: oldDataTypeTemplates,\n    node: newDOType,\n    reference: getReference(oldDataTypeTemplates, 'DOType'),\n  };\n}\n\nfunction addLNodeType(\n  template: Element,\n  newLNodeType: Element,\n  oldDataTypeTemplates: Element\n): Insert | undefined {\n  if (!isDataTypeConnected(newLNodeType, template)) return undefined;\n\n  const existLNodeType = oldDataTypeTemplates.querySelector(\n    `LNodeType[id=\"${newLNodeType.getAttribute('id')}\"]`\n  );\n  if (existLNodeType && newLNodeType.isEqualNode(existLNodeType))\n    return undefined;\n\n  if (existLNodeType) {\n    // There is an `id` conflict in the project that must be resolved by\n    // concatenating the IED name with the id\n\n    window.alert('There is inconsistent duplication. Please resolve first');\n\n    return undefined;\n  }\n\n  return {\n    parent: oldDataTypeTemplates,\n    node: newLNodeType,\n    reference: getReference(oldDataTypeTemplates, 'LNodeType'),\n  };\n}\n\nexport function addDataTypeTemplates(\n  bayTemplate: Element,\n  doc: XMLDocument\n): Insert[] {\n  const dataTypeEdit: Insert[] = [];\n\n  const scl = doc.querySelector('SCL')!;\n\n  const dataTypeTemplates = doc.querySelector(':root > DataTypeTemplates')\n    ? doc.querySelector(':root > DataTypeTemplates')!\n    : createElement(doc, 'DataTypeTemplates', {});\n\n  if (!dataTypeTemplates.parentElement) {\n    dataTypeEdit.push({\n      parent: scl,\n      node: dataTypeTemplates,\n      reference: getReference(scl, 'DataTypeTemplates'),\n    });\n  }\n\n  const typeEdits: (Insert | undefined)[] = [];\n  bayTemplate.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > EnumType')\n    .forEach(enumType =>\n      typeEdits.push(addEnumType(bayTemplate, enumType, dataTypeTemplates!))\n    );\n\n  bayTemplate.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > DAType')\n    .forEach(daType =>\n      typeEdits.push(addDAType(bayTemplate, daType, dataTypeTemplates!))\n    );\n\n  bayTemplate.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > DOType')\n    .forEach(doType =>\n      typeEdits.push(addDOType(bayTemplate, doType, dataTypeTemplates!))\n    );\n\n  bayTemplate.ownerDocument\n    .querySelectorAll(':root > DataTypeTemplates > LNodeType')\n    .forEach(lNodeType =>\n      typeEdits.push(addLNodeType(bayTemplate, lNodeType, dataTypeTemplates!))\n    );\n\n  return dataTypeEdit.concat(\n    typeEdits.reverse().filter(item => item !== undefined) as Insert[]\n  );\n}\n\nexport function updateSourceRef(\n  parent: Element,\n  template: Element,\n  newBay?: string\n): Update[] {\n  const updates: Update[] = [];\n\n  template.querySelectorAll('SourceRef').forEach(srcRef => {\n    const source = srcRef.getAttribute('source');\n    if (!source) return;\n\n    const ref = source.split('/');\n    const begin = ref.splice(0, 3);\n\n    const oldSubSt = parent.closest('Substation')?.getAttribute('name');\n    const oldVoltLv = parent.closest('VoltageLevel')?.getAttribute('name');\n    const oldBay = parent.closest('Bay')?.getAttribute('name');\n\n    console.log(begin);\n    console.log(ref);\n\n    console.log(oldSubSt, oldVoltLv, oldBay);\n\n    updates.push({\n      element: srcRef,\n      attributes: {\n        source: `${oldSubSt}/${oldVoltLv}/${newBay}/${ref.join('/')}`,\n      },\n    });\n  });\n\n  return updates;\n}\n"]}